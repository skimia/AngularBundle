{# This is an extension of Twig Form Theme #}
{# We redefine form elements, so they are binded with Angular model #}
 
{% extends "form_div_layout.html.twig" %}
 
{# Make data available to current scope as $scope.data - will not work with hidden fields #}
{% block widget_attributes %}
    {% spaceless %}
        {% if block_prefixes.2 == 'entity'%}
            ng-model="data['{{ full_name|underscore }}'].id"
            ng-init="data['{{ full_name|underscore }}'] = data['{{ full_name|underscore }}'] == null ? {} : data['{{ full_name|underscore }}']"
        {%else%}
            ng-model="{{data_form(full_name)}}"
        {%endif%} {# we add Angular ng-model #}

        id="{{ id }}" name="{{ full_name|underscore }}"

        {% if read_only %} readonly="readonly"{% endif %}

        {% if disabled %} disabled="disabled"{% endif %}

        {% if required %} required="required"{% endif %}

        {% if max_length %} maxlength="{{ max_length }}"{% endif %}

        {% if pattern %} pattern="{{ pattern }}"{% endif %}

        {% for attrname, attrvalue in attr %}
            {% if attrname in ['placeholder', 'title'] %}
                {{ attrname }}="{{ attrvalue|trans({}, translation_domain) }}" 
            {% else %}
                {{ attrname }}="{{ attrvalue }}" 
            {% endif %}
        {% endfor %}
    {% endspaceless %}
{% endblock widget_attributes %}
 
{# current controller submit() will called, instead of submitting the form #}
{% block form_start %}
    {% spaceless %}
        {% set method = method|upper %}
        {% if method in ["GET", "POST"] %}
            {% set form_method = method %}
        {% else %}
            {% set form_method = "POST" %}
        {% endif %}
        <form 
        form-errors
        ng-init="data = data == null ? {} : data"
        name="{{ form.vars.name }}" 
        ng-submit="submit()" 
        method="{{ form_method|lower }}" 
        action="{{ action }}"{% for attrname, attrvalue in attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}{% if multipart %} enctype="multipart/form-data"{% endif %}>
        {% if form_method != method %}
            <input type="hidden" name="_method" value="{{ method }}" />
        {% endif %}
    {% endspaceless %}
{% endblock form_start %}
        

{% block multiselect_widget %}
    {% spaceless %}
            {% if not hide %}
            <multi-select 
                ng-init="data.{{name}} = data.{{name}} == null ? [] : data.{{name}}"
                ng-model="data.{{name}}" 
                model-entity="{{ repo_class }}" 
                available="{{name}}"
                selected-label="{{label}} Actuels" 
                available-label="{{label}} Disponibles" 
                display-attr="{{property}}">

            </multi-select>
            {% endif %}
    {% endspaceless %}
{% endblock %}
{% block singleselect_widget %}
    {% spaceless %}
            {% if not hide %}
            <single-select 
                {#ng-init="data.{{name}} = data.{{name}} == null ? [] : data.{{name}}"#}
                ng-model="data.{{name}}" 
                model-ids="data.{{ name }}" 
                model-entity="{{ repo_class }}" 
                display-attr="{{property}}">

            </single-select>
            {% endif %}
    {% endspaceless %}
{% endblock %}
{% block multiselect_label %}
    {% spaceless %}
            
    {% endspaceless %}
{% endblock %}

{% block form_row %}
{% spaceless %}
    <div class="form-group has-feedback" ng-class="{'has-error': error.{{name}}.errors.length > 0}">
        {{ form_label(form) }}
        {{ form_errors(form) }}
        {{ form_widget(form) }}
        <span class="fa fa-times-circle form-control-feedback" ng-if="error.{{name}}.errors.length > 0"></span>
        <span class="help-block" ng-repeat="err in error.{{name}}.errors">{% verbatim%}{{err}}{%endverbatim%}</span>
    </div>
{% endspaceless %}
{% endblock form_row %}

{% block checkbox_row %}
{% spaceless %}
    <div class="checkbox">
        <label>
        {{ form_widget(form) }}{{ form_label(form) }}
        </label>
    </div>
{% endspaceless %}
{% endblock checkbox_row %}

{% block checkbox_label %}
    {% spaceless %}
        {% if label is not sameas(false) %}
        {% if not compound %}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {% endif %}
        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}
        {{ label|trans({}, translation_domain) }}
    {% endif %}
    {% endspaceless %}
{% endblock %}

{% block button_widget %}
{% spaceless %}
    {% if label is empty %}
        {% set label = name|humanize %}
    {% endif %}
    <button class="btn btn-success" type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ label|trans({}, translation_domain) }}</button>
{% endspaceless %}
{% endblock button_widget %}


{% block choice_widget_options %}
{% spaceless %}
    {% for group_label, choice in options %}
        {% if choice is iterable %}
            <optgroup label="{{ group_label|trans({}, translation_domain) }}">
                {% set options = choice %}
                {{ block('choice_widget_options') }}
            </optgroup>
        {% else %}
            <option  {% if block_prefixes.2 == 'entity'%}ng-selected="data['{{ full_name|underscore }}'].id == {{ choice.value }}" {% endif %}value="{{ choice.value }}"{% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{{ choice.label|trans({}, translation_domain) }}</option>
        {% endif %}
    {% endfor %}
{% endspaceless %}
{% endblock choice_widget_options %}